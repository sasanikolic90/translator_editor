<?php

/**
 * @file
 * Contains install and update functions for Translator Editor.
 */

use Drupal\embed\Entity\EmbedButton;
use Drupal\Core\Utility\UpdateException;

/**
 * Implements hook_requirements().
 *
 * Checks that the necessary libraries have been installed.
 */
function translator_editor_requirements($phase) {
  $requirements = [];

  if ($phase === 'install') {
    if (!class_exists('\Embed\Embed')) {
      $requirements['translator_editor_library'] = [
        'description' => t("Translator Editor requires the Embed/Embed library."),
        'severity' => REQUIREMENT_ERROR,
      ];
    }
  }

  return $requirements;
}

/**
 * Convert Image embed buttons to embed buttons.
 *
 * @todo Can we reuse the existing UUID and save before deleting the old button?
 */
function translator_editor_update_8001() {
  $config_factory = \Drupal::configFactory();

  foreach ($config_factory->listAll('translator_editor.image_button.') as $config_name) {
    $old_embed_button = $config_factory->getEditable($config_name);
    $values = $old_embed_button->getRawData();

    if (EmbedButton::load($values['id'])) {
      throw new UpdateException('Unable to convert translator_editor.image_button.' . $values['id'] . ' to embed.button.' . $values['id'] . ' since the latter already exists.');
    }

    // Move some data around.
    $values['type_id'] = 'image';
    $values['icon_uuid'] = $values['button_icon_uuid'];
    unset($values['button_icon_uuid']);

    // Save the new embed button and delete the old one.
    $embed_button = EmbedButton::create($values);
    $embed_button->save();
    $old_embed_button->delete();
  }
}
